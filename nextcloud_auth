#!/usr/bin/python
"""
This is a prosody mod_auth_external plugin to auth against a nextcloud install

Tip: if you run into [ratelimiting](https://nextcloud.com/blog/security-in-nextcloud-12-bruteforce-protection-and-rate-limiting-for-developers/)
while testing this do
# psql nextcloud nextcloud
>> select * from oc_bruteforce_attempts;
>> delete from oc_bruteforce_attempts where ip = 'your_ip_address';
"""

import sys
import base64
import json

try:
    # python3
    import urllib.request as urllib
except ImportError:
    # python2
    import urllib2 as urllib

def nextcloud_auth(site, username, password):
    """
    site: the base URL of a Nextcloud / Owncloud install
    username: the username to try to login as
    password: the password to login as
    
    returns: whether the user could successfully log in, as a boolean
    """
    
    req = urllib.Request("%s/ocs/v1.php/cloud/users/%s?format=json" % (site,username))
    
    # build the authentication header
    try:
        # python2
        authstring = base64.b64encode('%s:%s' % (username, password))
    except TypeError:
        # python3
        base64string = base64.b64encode(bytes('%s:%s' % (username, password), 'ascii'))
        authstring = base64string.decode('utf-8')

    req.add_header("Authorization", "Basic %s" % authstring)
    req.add_header("OCS-APIRequest", "true")

    try:
        resp = urllib.urlopen(req)
    except:
        return False

    data = json.load(resp)
    if data['ocs']['meta']['status'] == 'ok':
        return True
    return False

def main(site):
    for line in sys.stdin:
        line = line.rstrip("\n") # strip trailing newline
        try:
            cmd, line = line.split(":",1) #XXX assumption: every command will have arguments, or if not, at least a : in it
            if cmd == "auth":
                username, domain, password = line.split(":",2)
                print(int(nextcloud_auth(site, username, password)))
            elif cmd == "isuser":
                username, domain = line.split(":",1)
                print("1") # XXX unimplemented: just pretend everyone is a valid user
            elif cmd == "setpass":
                #username, domain, password = line.split(":",2)
                print("0") # XXX unimplemented: we can't change the password from here so don't bother
            else:
                # "Your script must respond with "0" for anything it doesn't understand.
                print("0")
        except:
            # "Your script must respond with "0" for anything it doesn't understand.
            print("0")

if __name__ == '__main__':
    main(sys.argv[1])
    #print(nextcloud_auth(*sys.argv[1:]))
